<?xml version="1.0"?>
<package xmlns="http://schemas.microsoft.com/packaging/2011/08/nuspec.xsd">
  <metadata>
    <id>Hopac</id>
    <version>0.0.0.39</version>
    <authors>Housemarque Inc.</authors>
    <owners>Housemarque Inc.</owners>
    <licenseUrl>https://github.com/Hopac/Hopac/blob/master/LICENSE.md</licenseUrl>
    <projectUrl>https://github.com/Hopac/Hopac</projectUrl>
    <iconUrl>https://avatars2.githubusercontent.com/u/10173903</iconUrl>
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <description>Inspired by languages like Concurrent ML and Cilk, Hopac is a library for F# with the aim of making it easier to write efficient parallel, asynchronous and concurrent programs. Hopac is licensed under a MIT-style license. See project website for further information.</description>
    <summary>A library for Higher-Order, Parallel, Asynchronous and Concurrent programming in F#.</summary>
    <releaseNotes>Added internal class for `for` -style jobs.
Added `Job.tryInDelay`.
Added `distinctUntilChanged`.
Extended `groupByFun` and `groupByJob` with ability to close substreams.
Added plain `iter`.
Tests for streams.
Shift is tricky to implement correctly.
Documenting and refining streams.
`sleep` doesn't exist anymore.
Note about timeouts and liveness.</releaseNotes>
    <copyright>Copyright 2015</copyright>
    <tags>f#, fsharp, parallel, async, concurrent, reactive</tags>
  </metadata>
</package>